import 'package:flutter/foundation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:sine/models/period.dart';
import 'package:uuid/uuid.dart';

part 'tracker.g.dart';

/// A tracker which optionally auto-increments based on [period].
@JsonSerializable()
class Tracker {
  /// Identifier for this tracker. A UUID is generated by default.
  final String id;

  /// The title of the tracker.
  final String title;

  /// The current episode count.
  final int current;

  /// Offsets the maximum episode count as calcuated by [period].
  final int offset;

  /// If not null, how often this tracker will auto-increment.
  final Period period;

  Tracker({
    String uuid,
    @required this.title,
    this.current = 0,
    this.offset = 0,
    this.period,
  }) : id = uuid ?? Uuid().v4();

  int get max => offset + (period?.elapsed ?? 0);
  DateTime get next => period?.next;

  @override
  String toString() {
    return 'Tracker $title: $current / $max (updates $period)';
  }

  factory Tracker.fromJson(Map<String, dynamic> json) =>
      _$TrackerFromJson(json);
  Map<String, dynamic> toJson() => _$TrackerToJson(this);
}
